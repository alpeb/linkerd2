name: CI

on:
  pull_request: {}
  push:
    branches:
    - master
    tags:
    - "*"

# Jobs by event type and dependencies:

# Unit tests for every master/tag push and PR
#
# validate_go_deps
# go_unit_tests
# go_lint
# js_unit_tests

# Docker build and integration tests for every master/tag push and linkerd org PR
#
# docker_pull
# docker_build
# kind_setup
#   -> kind_integration
#     -> kind_cleanup

# Docker deploy and cloud integration tests for every master/tag push
#
#       -> docker_deploy
#         -> cloud_integration
#           -> cloud_cleanup

jobs:



  docker_deploy:
    name: Docker deploy
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Configure gcloud
      uses: ./.github/actions/gcloud
      with:
        cloud_sdk_service_account_key: ${{ secrets.CLOUD_SDK_SERVICE_ACCOUNT_KEY }}
        gcp_project: ${{ secrets.GCP_PROJECT }}
        gcp_zone: ${{ secrets.GCP_ZONE }}
    - name: Docker SSH setup
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/id && chmod 600 ~/.ssh/id
        echo "${{ secrets.DOCKER_SSH_CONFIG }}"  > ~/.ssh/config
        echo "${{ secrets.DOCKER_PRIVATE_KEY }}" > ~/.ssh/id
        echo "${{ secrets.DOCKER_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        ssh linkerd-docker docker version
    - name: Docker push
      env:
        DOCKER_HOST: ssh://linkerd-docker
      run: |
        export PATH="`pwd`/bin:$PATH"
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        bin/docker-push-deps
        bin/docker-push $TAG
        bin/docker-retag-all $TAG master
        bin/docker-push master

  cloud_integration:
    name: Cloud integration tests
    runs-on: ubuntu-18.04
    needs: [docker_deploy]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install linkerd CLI
      run: |
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        image="gcr.io/linkerd-io/cli-bin:$TAG"
        id=$(bin/docker create $image)
        bin/docker cp "$id:/out/linkerd-linux" "$HOME/.linkerd"
        $HOME/.linkerd version --client
        # validate CLI version matches the repo
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
        echo "Installed Linkerd CLI version: $TAG"
    - name: Create GKE cluster
      uses: ./.github/actions/gcloud
      with:
        cloud_sdk_service_account_key: ${{ secrets.CLOUD_SDK_SERVICE_ACCOUNT_KEY }}
        gcp_project: ${{ secrets.GCP_PROJECT }}
        gcp_zone: ${{ secrets.GCP_ZONE }}
        create: true
    - name: Run integration tests
      env:
        GITCOOKIE_SH: ${{ secrets.GITCOOKIE_SH }}
      run: |
        export PATH="`pwd`/bin:$PATH"
        echo "$GITCOOKIE_SH" | bash
        version="$($HOME/.linkerd version --client --short | tr -cd '[:alnum:]-')"
        bin/test-run $HOME/.linkerd linkerd-$version
    - name: CNI tests
      run: |
        export TAG="$($HOME/.linkerd version --client --short)"
        go test -cover -race -v -mod=readonly ./cni-plugin/test -integration-tests

  cloud_cleanup:
    if: always()
    name: Cloud cleanup
    runs-on: ubuntu-18.04
    needs: [cloud_integration]
    steps:
    - name: Install linkerd CLI
      run: |
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        image="gcr.io/linkerd-io/cli-bin:$TAG"
        id=$(bin/docker create $image)
        bin/docker cp "$id:/out/linkerd-linux" "$HOME/.linkerd"
        $HOME/.linkerd version --client
        # validate CLI version matches the repo
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
        echo "Installed Linkerd CLI version: $TAG"
    - name: Destroy GKE cluster
      uses: ./.github/actions/gcloud
      with:
        cloud_sdk_service_account_key: ${{ secrets.CLOUD_SDK_SERVICE_ACCOUNT_KEY }}
        gcp_project: ${{ secrets.GCP_PROJECT }}
        gcp_zone: ${{ secrets.GCP_ZONE }}
        destroy: true

  #
  # Helm chart artifact deploy run for:
  # - every tag push
  #

  chart_deploy:
    name: Helm chart deploy
    runs-on: ubuntu-18.04
    needs: [cloud_integration]
    steps:
    - name: Checkout code
      if: startsWith(github.ref, 'refs/tags')
      uses: actions/checkout@v2
    - name: Configure gsutils
      if: startsWith(github.ref, 'refs/tags')
      env:
        CLOUDSDK_CORE_DISABLE_PROMPTS: "1"
        CLOUD_SDK_SERVICE_ACCOUNT_KEY: ${{ secrets.LINKERD_SITE_TOKEN }}
        GCP_PROJECT: ${{ secrets.LINKERD_SITE_PROJECT }}
        GCP_ZONE: ${{ secrets.LINKERD_SITE_ZONE }}
        GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
      run: |
        # Install gcloud and gsutil.
        echo "$CLOUD_SDK_SERVICE_ACCOUNT_KEY" > .gcp.json
        dir="${CLOUDSDK_INSTALL_DIR:-${HOME}}/google-cloud-sdk"
        (
          . bin/_gcp.sh ;
          install_gcloud "$dir"
          gcloud components install gsutil
          # Configure gcloud with a service account.
          set_gcloud_config "$GCP_PROJECT" "$GCP_ZONE" "$GKE_CLUSTER"
        )
        . "$dir/path.bash.inc"
        mkdir -p target/helm
    - name: Edge Helm chart creation and upload
      if: startsWith(github.ref, 'refs/tags/edge')
      run: |
        gsutil cp gs://helm.linkerd.io/edge/index.yaml target/helm/index-pre.yaml
        bin/helm-build package
        gsutil rsync target/helm gs://helm.linkerd.io/edge
    - name: Stable Helm chart creation and upload
      if: startsWith(github.ref, 'refs/tags/stable')
      run: |
        gsutil cp gs://helm.linkerd.io/stable/index.yaml target/helm/index-pre.yaml
        bin/helm-build package
        gsutil rsync target/helm gs://helm.linkerd.io/stable
