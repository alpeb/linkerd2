name: CI

on:
  pull_request: {}
  push:
    branches:
      - master
    tags:
      - "*"

# Jobs by event type and dependencies:

# Unit tests for every master/tag push and PR
#
# go_dependencies
# go_unit_tests
# go_lint
# js_unit_tests

# All master/tag pushes and PRs
#
# docker_build
# -> kind_integration_tests

# Docker push and cloud integration tests for every master/tag push
#
#     -> docker_push
#        -> cloud_integration_tests

jobs:

  #
  # Unit tests run for:
  # - every master push
  # - every tag push
  # - every PR
  #

  #
  # Docker build and kind integration tests run for:
  # - every master push
  # - every tag push
  # - every PR
  #

  docker_build:
    name: Docker build
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set environment variables from scripts
      run: |
        . bin/_tag.sh
        echo ::set-env name=TAG::$(CI_FORCE_CLEAN=1 bin/root-tag)

        . bin/_docker.sh
        echo ::set-env name=DOCKER_REGISTRY::$DOCKER_REGISTRY
    - name: Setup SSH config for Packet
      if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/id && chmod 600 ~/.ssh/id
        echo "${{ secrets.DOCKER_SSH_CONFIG }}"  > ~/.ssh/config
        echo "${{ secrets.DOCKER_PRIVATE_KEY }}" > ~/.ssh/id
        echo "${{ secrets.DOCKER_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        ssh linkerd-docker docker version
        echo ::set-env name=DOCKER_HOST::ssh://linkerd-docker
    - name: Build docker images
      env:
        DOCKER_TRACE: 1
      run: |
        export PATH="`pwd`/bin:$PATH"
        bin/docker-build
    - name: Create artifact with CLI and image archives (Forked repositories)
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork
      env:
        ARCHIVES: /home/runner/archives
      run: |
        mkdir -p $ARCHIVES

        for image in proxy controller web cni-plugin debug cli-bin grafana; do
          docker save "$DOCKER_REGISTRY/$image:$TAG" > $ARCHIVES/$image.tar || tee save_fail &
        done

        jobs


        # Wait for `docker save` background processes to complete. Exit early
        # if any job failed.
        wait < <(jobs -p)
        ls -l save_fail
        test -f save_fail && exit 1
    # `with.path` values do not support environment variables yet, so an
    # absolute path is used here.
    #
    # https://github.com/actions/upload-artifact/issues/8
    - name: Upload artifact (Forked repositories)
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork
      uses: actions/upload-artifact@v1
      with:
        name: image-archives
        path: /home/runner/archives

