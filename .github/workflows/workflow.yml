name: CI

on:
  pull_request: {}
  push:
    branches:
    - master
    tags:
    - "*"

# Jobs by event type and dependencies:

# Unit tests for every master/tag push and PR
#
# validate_go_deps
# go_unit_tests
# go_lint
# js_unit_tests

# Docker build and integration tests for every master/tag push and linkerd org PR
#
# docker_pull
# docker_build
# kind_setup
#   -> kind_integration
#     -> kind_cleanup

# Docker deploy and cloud integration tests for every master/tag push
#
#       -> docker_deploy
#         -> cloud_integration
#           -> cloud_cleanup

jobs:

  docker_build:
    name: Docker build
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
      uses: actions/checkout@v2
    - name: Docker SSH setup
      if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/id && chmod 600 ~/.ssh/id
        echo "${{ secrets.DOCKER_SSH_CONFIG }}"  > ~/.ssh/config
        echo "${{ secrets.DOCKER_PRIVATE_KEY }}" > ~/.ssh/id
        echo "${{ secrets.DOCKER_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        ssh linkerd-docker docker version
    - name: Docker build
      if: github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork
      env:
        DOCKER_HOST: ssh://linkerd-docker
      run: |
        export PATH="`pwd`/bin:$PATH"
        DOCKER_TRACE=1 bin/docker-build

  #
  # Docker deploy and cloud integration tests run for:
  # - every master push
  # - every tag push
  #

  docker_deploy:
    name: Docker deploy
    runs-on: ubuntu-18.04
    needs: [validate_go_deps, go_unit_tests, go_lint, js_unit_tests, kind_integration, kind_cleanup]
    steps:
    - name: Checkout code
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      uses: actions/checkout@v2
    - name: Configure gcloud
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      uses: ./.github/actions/gcloud
      with:
        cloud_sdk_service_account_key: ${{ secrets.CLOUD_SDK_SERVICE_ACCOUNT_KEY }}
        gcp_project: ${{ secrets.GCP_PROJECT }}
        gcp_zone: ${{ secrets.GCP_ZONE }}
    - name: Docker SSH setup
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/id && chmod 600 ~/.ssh/id
        echo "${{ secrets.DOCKER_SSH_CONFIG }}"  > ~/.ssh/config
        echo "${{ secrets.DOCKER_PRIVATE_KEY }}" > ~/.ssh/id
        echo "${{ secrets.DOCKER_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        ssh linkerd-docker docker version
    - name: Docker push
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      env:
        DOCKER_HOST: ssh://linkerd-docker
      run: |
        export PATH="`pwd`/bin:$PATH"
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        bin/docker-push-deps
        bin/docker-push $TAG
        #bin/docker-retag-all $TAG master
        #bin/docker-push master

  cloud_integration:
    name: Cloud integration tests
    runs-on: ubuntu-18.04
    needs: [docker_deploy]
    steps:
    - name: Checkout code
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      uses: actions/checkout@v2
    - name: Install linkerd CLI
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      run: |
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        image="gcr.io/linkerd-io/cli-bin:$TAG"
        id=$(bin/docker create $image)
        bin/docker cp "$id:/out/linkerd-linux" "$HOME/.linkerd"
        $HOME/.linkerd version --client
        # validate CLI version matches the repo
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
        echo "Installed Linkerd CLI version: $TAG"
    - name: Create GKE cluster
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      uses: ./.github/actions/gcloud
      with:
        cloud_sdk_service_account_key: ${{ secrets.CLOUD_SDK_SERVICE_ACCOUNT_KEY }}
        gcp_project: ${{ secrets.GCP_PROJECT }}
        gcp_zone: ${{ secrets.GCP_ZONE }}
        create: true
    - name: Run integration tests
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      env:
        GITCOOKIE_SH: ${{ secrets.GITCOOKIE_SH }}
      run: |
        export PATH="`pwd`/bin:$PATH"
        echo "$GITCOOKIE_SH" | bash
        version="$($HOME/.linkerd version --client --short | tr -cd '[:alnum:]-')"
        bin/test-run $HOME/.linkerd linkerd-$version
    - name: CNI tests
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      run: |
        export TAG="$($HOME/.linkerd version --client --short)"
        go test -cover -race -v -mod=readonly ./cni-plugin/test -integration-tests

  cloud_cleanup:
    if: always()
    name: Cloud cleanup
    runs-on: ubuntu-18.04
    needs: [cloud_integration]
    steps:
    - name: Checkout code
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      uses: actions/checkout@v2
    - name: Install linkerd CLI
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      run: |
        TAG="$(CI_FORCE_CLEAN=1 bin/root-tag)"
        image="gcr.io/linkerd-io/cli-bin:$TAG"
        id=$(bin/docker create $image)
        bin/docker cp "$id:/out/linkerd-linux" "$HOME/.linkerd"
        $HOME/.linkerd version --client
        # validate CLI version matches the repo
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
        echo "Installed Linkerd CLI version: $TAG"
    - name: Destroy GKE cluster
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
      uses: ./.github/actions/gcloud
      with:
        cloud_sdk_service_account_key: ${{ secrets.CLOUD_SDK_SERVICE_ACCOUNT_KEY }}
        gcp_project: ${{ secrets.GCP_PROJECT }}
        gcp_zone: ${{ secrets.GCP_ZONE }}
        destroy: true

