name: Docker Build
description: Builds linkerd's docker images
inputs:
  docker-registry:
    description: The docker registry used to tag the images
    required: false
    default: cr.l5d.io/linkerd
  docker-target:
    description: The OS-arch the docker build will be targeted to
    required: false
    default: linux-amd64
  docker-push:
    description: Whether to push the built images to the registry
    required: false
    default: ''
  docker-ghcr-username:
    description: GH username under which to push images
    required: false
  docker-ghcr-pat:
    description: GH PAT for docker-ghcr-username
    required: false
  component:
    description: Image to build
    required: true
outputs:
  tag:
    description: Current linkerd tag, as produced by bin/root-tag
    #value: ${{ env.TAG }}
    value: foobar
runs:
  using: "composite"
  steps:
    - name: Set environment variables from scripts
      shell: bash
      run: |
        . bin/_tag.sh
        echo "TAG=$(CI_FORCE_CLEAN=1 bin/root-tag)" >> $GITHUB_ENV
        echo "DOCKER_BUILDKIT_CACHE=${{ runner.temp }}/.buildx-cache" >> $GITHUB_ENV
    - name: Cache docker layers
      uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353
      with:
        path: ${{ env.DOCKER_BUILDKIT_CACHE }}
        key: ${{ runner.os }}-buildx-${{ inputs.component }}-${{ env.TAG }}
        restore-keys: ${{ runner.os }}-buildx-${{ inputs.component }}-
    # TODO: guard these two with `if: inputs.docker-target == 'multi-arch'`
    # when this get's fixed: https://github.com/actions/runner/issues/834
    - name: Set up QEMU
      uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@abe5d8f79a1606a2d3e218847032f3f2b1726ab0
    - name: Build docker images
      env:
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}
        DOCKER_TARGET: ${{ inputs.docker-target }}
        DOCKER_PUSH: ${{ inputs.docker-push }}
      shell: bash
      run: |
        if [[ -n "$DOCKER_PUSH" ]];then
          echo "${{ inputs.docker-ghcr-pat }}" | docker login ghcr.io -u "${{ inputs.docker-ghcr-username }}" --password-stdin
        fi
        bin/docker-build-${{ inputs.component }}
    - name: Prune docker layers cache
      # changes generate new images while the existing ones don't get removed
      # so we manually do that to avoid bloating the cache
      shell: bash
      run: bin/docker-cache-prune
